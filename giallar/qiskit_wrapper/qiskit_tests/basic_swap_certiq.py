
# Copyright 2019-2020 The CertiQ authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This file is automatically generated from a CertiQ compiler pass

from verified_passes.basic_swap import BasicSwap
from giallar.core.impl.layout import Layout
from giallar.qiskit_wrapper.converter import dag_to_certiq_circ, certiq_circ_to_dag
from qiskit.transpiler.basepasses import TransformationPass
from qiskit.converters import dag_to_circuit

class NewBasicSwap(TransformationPass):
    

    def __init__(self, coupling=None):
        super().__init__()
        self.coupling = coupling
        
    def run(self, dag):
        
        
        new_certiq_pass = BasicSwap(coupling = self.coupling)
        #print(new_certiq_pass.coupling)
        circuit = dag_to_certiq_circ(dag)

        qiskit_circuit = dag_to_circuit(dag)
        print(qiskit_circuit)

        prop = {}
        prop['circ'] = circuit
        self.property_set['layout'] = Layout.generate_trivial_layout(circuit)
        if self.property_set['layout'] is not None:
            prop['layout'] = self.property_set['layout']

        out_prop= new_certiq_pass.run(prop)
        new_circuit = out_prop['circ']
        for gate in new_circuit.gate_list:
            print(gate.name, gate.qubits)
        new_dag = certiq_circ_to_dag(new_circuit)

        new_qiskit_circuit = dag_to_circuit(new_dag)
        print(new_qiskit_circuit)

        return new_dag
